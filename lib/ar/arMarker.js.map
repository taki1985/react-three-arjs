{"version":3,"sources":["../../src/ar/arMarker.js"],"names":["ArMarkerControls","useFrame","React","useEffect","useRef","useState","useAR","ARMarker","children","type","barcodeValue","patternUrl","params","onMarkerFound","onMarkerLost","markerRoot","arToolkitContext","isFound","setIsFound","markerControls","current","index","_arMarkersControls","indexOf","splice","visible"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,SAASA,gBAAT,QAAiC,2CAAjC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,KAAT,QAAsB,MAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAQX;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,IAMI,QANJA,IAMI;AAAA,MALJC,YAKI,QALJA,YAKI;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,MAHJC,MAGI,QAHJA,MAGI;AAAA,MAFJC,aAEI,QAFJA,aAEI;AAAA,MADJC,YACI,QADJA,YACI;AACJ,MAAMC,UAAU,GAAGX,MAAM,EAAzB;;AACA,eAA6BE,KAAK,EAAlC;AAAA,MAAQU,gBAAR,UAAQA,gBAAR;;AACA,kBAA8BX,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOY,OAAP;AAAA,MAAgBC,UAAhB;;AAEAf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACa,gBAAL,EAAuB;AAAE;AAAQ;;AAEjC,QAAMG,cAAc,GAAG,IAAInB,gBAAJ,CAAqBgB,gBAArB,EAAuCD,UAAU,CAACK,OAAlD;AACrBX,MAAAA,IAAI,EAAJA,IADqB;AAErBC,MAAAA,YAAY,EAAED,IAAI,KAAK,SAAT,GAAqBC,YAArB,GAAoC,IAF7B;AAGrBC,MAAAA,UAAU,EAAEF,IAAI,KAAK,SAAT,GAAqBE,UAArB,GAAkC;AAHzB,OAIlBC,MAJkB,EAAvB;AAOA,WAAO,YAAM;AACX,UAAMS,KAAK,GAAGL,gBAAgB,CAACM,kBAAjB,CAAoCC,OAApC,CAA4CJ,cAA5C,CAAd;;AACAH,MAAAA,gBAAgB,CAACM,kBAAjB,CAAoCE,MAApC,CAA2CH,KAA3C,EAAkD,CAAlD;AACD,KAHD;AAID,GAdQ,EAcN,EAdM,CAAT;AAgBApB,EAAAA,QAAQ,CAAC,YAAM;AACb,QAAIc,UAAU,CAACK,OAAX,CAAmBK,OAAnB,IAA8B,CAACR,OAAnC,EAA4C;AAC1CC,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAIL,aAAJ,EAAmB;AAACA,QAAAA,aAAa;AAAG;AACrC,KAHD,MAGO,IAAI,CAACE,UAAU,CAACK,OAAX,CAAmBK,OAApB,IAA+BR,OAAnC,EAA4C;AACjDC,MAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,UAAIJ,YAAJ,EAAkB;AAACA,QAAAA,YAAY;AAAG;AACnC;AACF,GARO,CAAR;AAUA,sBACE;AAAO,IAAA,GAAG,EAAGC;AAAb,KACIP,QADJ,CADF;AAKD,CA5CD;;AA8CA,eAAeD,QAAf","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport { ArMarkerControls } from \"@ar-js-org/ar.js/three.js/build/ar-threex\"\nimport { useFrame } from \"@react-three/fiber\"\nimport React, { useEffect, useRef, useState } from \"react\"\nimport { useAR } from \"./ar\"\n\nconst ARMarker = ({\n  children,\n  type,\n  barcodeValue,\n  patternUrl,\n  params,\n  onMarkerFound,\n  onMarkerLost\n}) => {\n  const markerRoot = useRef()\n  const { arToolkitContext } = useAR()\n  const [isFound, setIsFound] = useState(false)\n\n  useEffect(() => {\n    if (!arToolkitContext) { return }\n\n    const markerControls = new ArMarkerControls(arToolkitContext, markerRoot.current, {\n      type,\n      barcodeValue: type === \"barcode\" ? barcodeValue : null,\n      patternUrl: type === \"pattern\" ? patternUrl : null,\n      ...params\n    })\n\n    return () => {\n      const index = arToolkitContext._arMarkersControls.indexOf(markerControls)\n      arToolkitContext._arMarkersControls.splice(index, 1)\n    }\n  }, [])\n\n  useFrame(() => {\n    if (markerRoot.current.visible && !isFound) {\n      setIsFound(true)\n      if (onMarkerFound) {onMarkerFound()}\n    } else if (!markerRoot.current.visible && isFound) {\n      setIsFound(false)\n      if (onMarkerLost) {onMarkerLost()}\n    }\n  })\n\n  return (\n    <group ref={ markerRoot }>\n      { children }\n    </group>\n  )\n}\n\nexport default ARMarker\n"],"file":"arMarker.js"}