{"version":3,"sources":["../../src/ar/arCanvas.js"],"names":["React","Canvas","AR","ARCanvas","arEnabled","tracking","children","patternRatio","detectionMode","cameraParametersUrl","matrixCodeType","sourceType","onCameraStreamReady","onCameraStreamError","sourceWidth","sourceHeight","displayWidth","displayHeight","props","position","camera"],"mappings":";;;;;;;;;;;;AAAA;;AACA;;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,SAASC,EAAT,QAAmB,MAAnB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,4BAAGC,SAAH;AAAA,MAAGA,SAAH,+BAAe,IAAf;AAAA,2BAAqBC,QAArB;AAAA,MAAqBA,QAArB,8BAAgC,IAAhC;AAAA,MAAsCC,QAAtC,QAAsCA,QAAtC;AAAA,+BAAgDC,YAAhD;AAAA,MAAgDA,YAAhD,kCAA+D,GAA/D;AAAA,gCAAoEC,aAApE;AAAA,MAAoEA,aAApE,mCAAoF,iBAApF;AAAA,mCAAuGC,mBAAvG;AAAA,MAAuGA,mBAAvG,sCAA6H,sBAA7H;AAAA,iCAAqJC,cAArJ;AAAA,MAAqJA,cAArJ,oCAAsK,KAAtK;AAAA,6BAA6KC,UAA7K;AAAA,MAA6KA,UAA7K,gCAA0L,QAA1L;AAAA,MAAoMC,mBAApM,QAAoMA,mBAApM;AAAA,MAAyNC,mBAAzN,QAAyNA,mBAAzN;AAAA,8BAA8OC,WAA9O;AAAA,MAA8OA,WAA9O,iCAA4P,GAA5P;AAAA,+BAAiQC,YAAjQ;AAAA,MAAiQA,YAAjQ,kCAAgR,GAAhR;AAAA,+BAAqRC,YAArR;AAAA,MAAqRA,YAArR,kCAAoS,GAApS;AAAA,gCAAySC,aAAzS;AAAA,MAAySA,aAAzS,mCAAyT,GAAzT;AAAA,MAAiUC,KAAjU;;AAAA,sBACf,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEd,SAAS,GAAG;AAAEe,MAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAZ,KAAH,GAA6BD,KAAK,CAACE;AAA5D,KAAwEF,KAAxE,GACGd,SAAS,gBACR,oBAAC,EAAD;AAAI,IAAA,QAAQ,EAAEC,QAAd;AAAwB,IAAA,YAAY,EAAEE,YAAtC;AAAoD,IAAA,cAAc,EAAEG,cAApE;AAAoF,IAAA,aAAa,EAAEF,aAAnG;AAAkH,IAAA,UAAU,EAAEG,UAA9H;AAA0I,IAAA,WAAW,EAAEG,WAAvJ;AAAoK,IAAA,YAAY,EAAEC,YAAlL;AAAgM,IAAA,YAAY,EAAEC,YAA9M;AAA4N,IAAA,aAAa,EAAEC,aAA3O;AAA0P,IAAA,mBAAmB,EAAER,mBAA/Q;AAAoS,IAAA,mBAAmB,EAAEG,mBAAzT;AAA8U,IAAA,mBAAmB,EAAEC;AAAnW,KACGP,QADH,CADQ,GAKRA,QANJ,CADe;AAAA,CAAjB;;AAYA,eAAeH,QAAf","sourcesContent":["/* eslint-disable indent */\n/* eslint-disable react/jsx-indent */\n/* eslint-disable react/jsx-pascal-case */\n\nimport React from 'react';\nimport { Canvas } from '@react-three/fiber';\n\nimport { AR } from './ar';\n\nconst ARCanvas = ({ arEnabled = true, tracking = true, children, patternRatio = 0.5, detectionMode = 'mono_and_matrix', cameraParametersUrl = 'data/camera_para.dat', matrixCodeType = '3x3', sourceType = 'webcam', onCameraStreamReady, onCameraStreamError, sourceWidth = 640, sourceHeight = 480, displayWidth = 640, displayHeight = 480, ...props }) => (\n  <Canvas camera={arEnabled ? { position: [0, 0, 0] } : props.camera} {...props}>\n    {arEnabled ? (\n      <AR tracking={tracking} patternRatio={patternRatio} matrixCodeType={matrixCodeType} detectionMode={detectionMode} sourceType={sourceType} sourceWidth={sourceWidth} sourceHeight={sourceHeight} displayWidth={displayWidth} displayHeight={displayHeight} cameraParametersUrl={cameraParametersUrl} onCameraStreamReady={onCameraStreamReady} onCameraStreamError={onCameraStreamError}>\n        {children}\n      </AR>\n    ) : (\n      children\n    )}\n  </Canvas>\n);\n\nexport default ARCanvas;\n"],"file":"arCanvas.js"}